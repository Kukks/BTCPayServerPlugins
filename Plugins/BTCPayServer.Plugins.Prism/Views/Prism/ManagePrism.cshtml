@using BTCPayServer.Abstractions.Contracts
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Plugins.Prism
@inject IScopeProvider ScopeProvider
@model PrismSettings
@{
    ViewData.SetActivePage("Prism", "Manage Prism", "Prism");
    var storeId = ScopeProvider.GetCurrentStoreId();
}

<div class="sticky-header mb-4">
    <h2 class="fw-bold">@ViewData["Title"]</h2>
</div>

<partial name="_StatusMessage" />

<ul class="nav nav-tabs mb-3" id="prismTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active"
                id="pending-balances-tab"
                data-bs-toggle="tab"
                data-bs-target="#pending-balances"
                type="button"
                role="tab"
                aria-controls="pending-balances"
                aria-selected="true">
            Destination Pending Balances
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link"
                id="pending-payouts-tab"
                data-bs-toggle="tab"
                data-bs-target="#pending-payouts"
                type="button"
                role="tab"
                aria-controls="pending-payouts"
                aria-selected="false">
            Pending Payouts
        </button>
    </li>
</ul>

<div class="tab-content" id="prismTabContent">
    <div class="tab-pane fade show active"
         id="pending-balances"
         role="tabpanel"
         aria-labelledby="pending-balances-tab"
         tabindex="0">

        <p class="text-muted small mb-3">
            These are the current balances of destinations. Once the threshold is reached for a destination,
            a payout is generated of that amount (minus the reserve fee amount to cover potential costs).
        </p>

        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead>
                    <tr>
                        <th scope="col">Destination</th>
                        <th scope="col">Balance (sats)</th>
                        <th scope="col" class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.DestinationBalance?.Any() == true)
                    {
                        @foreach (var balance in Model.DestinationBalance)
                        {
                            <tr>
                                <td>@balance.Key</td>
                                <td>@balance.Value</td>
                                <td class="text-end">
                                    <button type="button" class="btn btn-sm btn-outline-primary">View</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="text-center text-muted py-4">
                                No pending balances found
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="tab-pane fade"
         id="pending-payouts"
         role="tabpanel"
         aria-labelledby="pending-payouts-tab"
         tabindex="0">

        <p class="text-muted small mb-3">
            These payouts were generated by Prism after a threshold for a destination was reached. If these
            payouts are cancelled, the original destination will be credited back the payout amount. If a
            payout completes, we attempt to get the actual fee spent to adjust the destination balance
            accordingly.
        </p>

        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead>
                    <tr>
                        <th scope="col">Payout ID</th>
                        <th scope="col">Destination</th>
                        <th scope="col">Reserve Fee</th>
                        <th scope="col">Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.PendingPayouts?.Any() == true)
                    {
                        @foreach (var payout in Model.PendingPayouts)
                        {
                            var payoutId = payout.Key;
                            var payoutDetails = payout.Value;
                            <tr>
                                <td>@payoutId</td>
                                <td>@payoutDetails.DestinationId</td>
                                <td>@payoutDetails.FeeCharged</td>
                                <td>@payoutDetails.PayoutAmount</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center text-muted py-4">
                                No pending payouts found
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
