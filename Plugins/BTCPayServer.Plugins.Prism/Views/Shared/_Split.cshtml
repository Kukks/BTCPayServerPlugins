@using BTCPayServer.Payments
@using BTCPayServer.Plugins.Prism
@model Split
@{
    var destinations = ViewData["Destinations"] as Dictionary<string, PrismDestination> ?? new();
}

<div class="p-2 m-1 split-block" data-index="@ViewData["Index"]">
    <div class="form-group">
        <label class="form-label fw-bold">Source</label>
        <select asp-for="Source" name="Splits[@ViewData["Index"]].Source" class="form-select form-select w-auto">
            <option value="*@PaymentTypes.CHAIN.ToString()">Catch-all on-chain payments made against invoices in your store</option>
            <option value="*">Catch-all lightning payments made against invoices in your store</option>
        </select>
        <span asp-validation-for="Source" class="text-danger"></span>
    </div>

    <table class="table mb-0">
        <thead>
            <tr>
                <th>Destination</th>
                <th>Percentage</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Destinations.Count; i++)
            {
                var currentDest = Model.Destinations[i].Destination;
                var configuredMatch = destinations.Values.FirstOrDefault(d => d.Destination == currentDest);
                <tr>
                    <td>
                        @if (configuredMatch != null)
                        {
                            <select name="Splits[@ViewData["Index"]].Destinations[@i].Destination" class="form-select dest">
                                @foreach (var dest in destinations)
                                {
                                    <option value="@dest.Value.Destination" selected="@(currentDest == dest.Value.Destination)">
                                        @dest.Key
                                    </option> 
                                }
                            </select>
                        }
                        else
                        {
                            <input name="Splits[@ViewData["Index"]].Destinations[@i].Destination"
                                   value="@currentDest" class="form-control dest" />
                        }
                    </td>
                    <td>
                        <div class="d-flex align-items-center">
                            <input type="range"
                                   name="Splits[@ViewData["Index"]].Destinations[@i].Percentage"
                                   class="form-range flex-grow-1 me-2 percentage-slider"
                                   step="0.01"
                                   min="0"
                                   max="100"
                                   value="@Model.Destinations[i].Percentage" />

                            <input type="number"
                                   step="0.01"
                                   min="0"
                                   max="100"
                                   value="@Model.Destinations[i].Percentage"
                                   class="form-control form-control-sm percentage-input"
                                   style="width:90px; text-align:center; vertical-align:middle;" />
                            <span>%</span>
                        </div>
                    </td>
                    <td>
                        <button type="button" class="btn btn-outline-danger btn-sm remove-dest">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="3">
                    <button type="button" class="btn btn-link add-dest">+ Add New Destination</button>
                    <button type="button" class="btn btn-link text-danger remove-prism">Remove Prism</button>
                </td>
            </tr>
        </tfoot>
    </table>
</div>
